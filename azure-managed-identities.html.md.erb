---
title: Creating Managed Identities in Azure for Enterprise PKS
owner: Ops Manager
---

<strong><%= modified_date %></strong>

This topic describes how to create managed identities for <%= vars.product_full %> on Azure.

In order for Kubernetes to create load balancers and attach persistent disks to pods, you must create managed identities with sufficient permissions.

You need separate managed identities for the Kubernetes cluster master and worker node VMs.
<%= vars.vm_credentials %>

## <a id='id-resource-group'></a>Retrieve Your Subscription ID and Resource Group

To perform the procedures in this topic, you must retrieve your subscription ID and the name of your <%= vars.product_short %> resource group.

You entered your subscription ID into the `terraform.tfvars` file in [Step 1: Download and Edit the Terraform Variables File](https://docs.pivotal.io/pcf/om/azure/prepare-env-terraform.html#download) of <em>Deploying Ops Manager on Azure Using Terraform</em>.

The name of your <%= vars.product_short %> resource group is exported from Terraform as the output `pcf_resource_group_name`.

To retrieve your subscription ID and the name of your <%= vars.product_short %> resource group, you must have access to the output from when you ran `terraform apply` to create resources for the <%= vars.product_short %> deployment in [Step 3: Create Azure Resources with Terraform](https://docs.pivotal.io/pcf/om/azure/prepare-env-terraform.html#resources) of <em>Deploying Ops Manager on Azure Using Terraform</em>. You can view this output at any time by running `terraform output`.

## <a id='create-master'></a>Create the Master Node Managed Identity

Perform the following steps to create the managed identity for the master nodes:

1. Create a role definition using the following template, replacing `SUBSCRIPTION_ID` and `RESOURCE_GROUP` with your subscription ID and the name of your <%= vars.product_short %> resource group. For more information about custom roles in Azure, see [Custom Roles in Azure](https://docs.microsoft.com/en-us/azure/role-based-access-control/custom-roles) in the Azure documentation.

    ```
    {
        "Name":  "PKS master",
        "IsCustom":  true,
        "Description":  "Permissions for PKS master",
        "Actions":  [
            "Microsoft.Network/*",
            "Microsoft.Compute/disks/*",
            "Microsoft.Compute/virtualMachines/write",
            "Microsoft.Compute/virtualMachines/read",
            "Microsoft.Storage/storageAccounts/*"
        ],
        "NotActions":  [

        ],
        "DataActions":  [

        ],
        "NotDataActions":  [

        ],
        "AssignableScopes":  [
          "/subscriptions/SUBSCRIPTION-ID/resourceGroups/RESOURCE-GROUP"
        ]
    }
    ```
1. Save your template as `pks_master_role.json`.
1. To log in, run the following command with the Azure CLI:

    ```
    az login
    ```
    To authenticate, navigate to the URL in the output, enter the provided code, and click your account.
1. Create the role in Azure by running the following command from the directory with `pks_master_role.json`:

    ```
    az role definition create --role-definition pks_master_role.json
    ```
1. Create a managed identity by running the following command:

    ```
    az identity create -g RESOURCE_GROUP -n pks-master
    ```
    Where `RESOURCE_GROUP` is the name of your <%= vars.product_short %> resource group.
    <br><br>
    For more information about managed identities, see [Create a user-assigned managed identity](https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/how-to-manage-ua-identity-cli#create-a-user-assigned-managed-identity) in the Azure documentation.
1. Assign managed identity access to the <%= vars.product_short %> resource group by performing the following steps:
  1. Navigate to the Azure Portal and log in.
  1. Open the <%= vars.product_short %> resource group.
  1. Click **Access control (IAM)** on the left panel.
  1. Click **Add role assignment**.
  1. On the **Add role assignment** page, enter the following configurations:
      1. For **Assign access to**, select **User Assigned Managed Identity**.
      1. For **Role**, select **PKS master**.
      1. For **Select**, select the **pks-master** identity created above.

<p class="note"><strong>Note:</strong> The <strong>PKS master</strong> custom role created above is less permissive
than the built-in roles provided by Azure. However, if you want to use the built-in roles
instead of the recommended custom role, you can select the following three built-in roles in Azure: <strong>Storage Account Contributor</strong>, <strong>Network Contributor</strong>, and <strong>Virtual Machine Contributor</strong>.</p>

## <a id='create-worker'></a>Create the Worker Node Managed Identity

Perform the following steps to create the managed identity for the worker nodes:

1. Create a role definition using the following template, replacing `SUBSCRIPTION-ID` and
 `RESOURCE-GROUP` with your subscription ID and the name of your <%= vars.product_short %> resource group:

    ```
    {
        "Name":  "PKS worker",
        "IsCustom":  true,
        "Description":  "Permissions for PKS worker",
        "Actions":  [
            "Microsoft.Compute/virtualMachines/read",
            "Microsoft.Storage/storageAccounts/*"
        ],
        "NotActions":  [

        ],
        "DataActions":  [

        ],
        "NotDataActions":  [

        ],
        "AssignableScopes":  [
          "/subscriptions/SUBSCRIPTION-ID/resourceGroups/RESOURCE-GROUP"
        ]
    }
    ```
1. Save your template as `pks_worker_role.json`.
1. Create the role in Azure by running the following command from the directory with `pks_worker_role.json`:

    ```
    az role definition create --role-definition pks_worker_role.json
    ```

1. Create a managed identity by running the following command:

    ```
    az identity create -g RESOURCE_GROUP -n pks-worker
    ```
    Where `RESOURCE_GROUP` is the name of your <%= vars.product_short %> resource group.
1. Assign managed identity access to the <%= vars.product_short %> resource group by performing the following steps:
  1. Navigate to the Azure Portal and log in.
  1. Open the <%= vars.product_short %> resource group.
  1. Click **Access control (IAM)** on the left panel.
  1. Click **Add role assignment**.
  1. On the **Add role assignment** page, enter the following configurations:
      1. For **Assign access to**, select **User Assigned Managed Identity**.
      1. For **Role**, select **PKS worker**.
      1. For **Select**, select the **pks-worker** identity created above.

<p class="note"><strong>Note:</strong> The <strong>PKS worker</strong> custom role created above is less permissive
than the built-in roles provided by Azure. However, if you want to use the built-in roles instead of the recommended custom role,
you can select the <strong>Storage Account Contributor</strong> built-in role in Azure.</p>

## <a id="next-steps"></a>Next Installation Step

To install and configure <%= vars.product_short %>, follow the instructions in
[Installing <%= vars.product_short %> on Azure](installing-pks-azure.html).
