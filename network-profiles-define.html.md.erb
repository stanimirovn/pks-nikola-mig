---
title: Defining Network Profiles
owner: PKS
---

<strong><%= modified_date %></strong>

This topic describes how to define network profiles for Kubernetes clusters provisioned with <%= vars.product_full %> on vSphere with NSX-T.

## <a id='about'></a> About Network Profiles

Network profiles let you customize NSX-T configuration parameters at the time of cluster creation. Use cases for network profiles include the following:

Profile Type 								              		| Description
----------------------------------------------------------------|------------------------------------------------------------------------------
[Load Balancer Sizing](./network-profiles-lb-size.html)	  		| Customize the size of the NSX-T load balancer service that is created when a Kubernetes cluster is provisioned.
[Custom Pod Networks](./network-profiles-pods.html) 			| Assign IP addresses from a dedicated IP block to pods in your Kubernetes cluster.
[Routable Pod Networks](./network-profiles-pods.html) 			| Assign routable IP addresses from a dedicated IP block to pods in your Kubernetes cluster.
[Security Groups](./network-profiles-ns-groups.html) 			| Specify an NSX-T Namespace Group where Kubernetes master nodes will be added to during cluster creation.
[Pod Subnet Prefix](./network-profiles-pods.html)	 	      	| Specify the size of the pod subnet.
[Custom Floating IP](./network-profiles-fip.html)         		| Specify a custom floating IP pool.
[Edge Router Selection](./network-profiles-edge.html)	    	| Specify the NSX-T Tier-0 router where Kubernetes node and Pod networks will be connected to.
[Nodes DNS Configuration](./network-profiles-nodes.html)  		| Specify one or more DNS servers for Kubernetes clusters.
[DNS Lookup of Pre-Provisioned IPs](./network-profiles-dns.html)| Specify Master Node IP address or perform a DNS lookup.
[Load Balancer Configuration](./network-profiles-ncp-lb.html)	| Configure layer 4 TCP load balancer settings; use third-party load balancer.
[Ingress Configuration](./network-profiles-ncp-ingress.html)    | Configure layer 7 HTTP/S ingress controller settings; use third-party ingress controller.
[FW Section Marking](./network-profiles-ncp-dfw.html)           | Configure top or bottom section markers for explicit DFW rule placement.
[Logging and Error Handling](./network-profiles-ncp-logerr.html)| Configure NCP logging and error handling.


## <a id="format"></a> Network Profile Format

Network profiles are defined using JSON. Here is an example network profile that includes all available parameters.

<p class="note"><strong>Note:</strong> This example network profile is for illustration purposes only. It is not intended to be used as a template for network profile definition.</p>

```
{
	"name": "example-network-profile",
	"description": "Example Network Profile with All Available Parameters -- FOR ILLUSTRATION PURPOSES ONLY",
	"parameters": {
		"lb_size": "large",
		"pod_ip_block_ids": [
			"ebe78a74-a5d5-4dde-ba76-9cf4067eee55",
			"ebe78a74-a5d5-4dde-ba76-9cf4067eee56" ],
		"pod_subnet_prefix": 27,
    	"pod_routable": true,
		"fip_pool_ids": [
			"e50e8f6e-1a7a-45dc-ad49-3a607baa7fa0",
			"ebe78a74-a5d5-4dde-ba76-9cf4067eee55" ],
		"t0_router_id": "5a7a82b2-37e2-4d73-9cb1-97a8329e1a90",
		"master_vms_nsgroup_id": "9b8d535a-d3b6-4735-9fd0-56305c4a5293",
    	"nodes_dns": [
      		"8.8.8.8", "192.168.115.1", "192.168.116.1" ],		
		"dns_lookup_mode": "API_INGRESS",
		"ingress_prefix": "ingress",
		"cni_configurations": {
			"type": "nsxt",
			"parameters": {
				"nsx_lb": false,
				"nsx_ingress_controller": true,			
				"x_forwarded_for": "insert",
				"ingress_ip": "192.168.160.212",
				"log_settings": {
					"log_level": "DEBUG",
					"log_dropped_traffic": true },
				"ingress_persistence_settings": {
					"persistence_type": "cookie",
					"persistence_timeout": 1 },
				"max_l4_lb_service": 10,
				"l4_persistence_type": "source_ip",
        		"l4_lb_algorithm": "weighted_round_robin",
        		"top_firewall_section_marker":"section-id",
        		"bottom_firewall_section_marker":"section-id"                         
			}
		}
	}
}
```

<p class="note"><strong>WARNING:</strong> None of the parameters defined under <code>cni_configurations</code> can be updated.</p>

## <a id="params"></a> Network Profile Parameters

The network profile JSON accepts the following top-level parameters:

Parameter 					| Type 		| Description 
----------------------------|-----------|-----------------------------
| `name` 					| String 	| Name of the network profile. 
| `description` 			| String 	| Description of the network profile. 
| `parameters` 				| Map 		| One or more name-value pairs. 
| `lb_size` 				| String 	| Size of the NSX-T load balancer service: `small` (default), `medium`, and `large`.
| `pod_ip_block_ids`		| String 	| Array of Pod IP Block UUIDs. 
| `pod_subnet_prefix`		| Integer 	| Size of the Pods IP Block subnet. 
| `pod_routable` 			| Boolean 	| Make routable the Pods subnet. Default is `false`. 
| `fip_pool_ids` 			| String 	| Array of floating IP pool UUIDs defined in NSX-T. 
| `t0_router_id` 			| String 	| Tenant Tier-0 Router UUID defined in NSX-T. 
| `master_vms_nsgroup_id` 	| String 	| Namespace Group UUID as defined in NSX-T. 
| `nodes_dns` 				| String 	| Array (up to 3) of DNS server IP addresses for lookup of Kubernetes nodes and pods. 
| `dns_lookup_mode` 		| String 	| DNS lookup mode for Kubernetes API load balancer (`API`) and ingress controller (`API_INGRESS`). 
| `ingress_prefix` 			| String 	| Ingress controller hostname prefix for DNS lookup. 
| `cni_configurations`		| Map 		| Map containing key-value pairs for configuring NCP (see table below). 

The network profile JSON accepts the following parameters for `cni_configurations`:

Parameter 							| Type 		| Description 
------------------------------------|-----------|-----------------------------
| `type` 							| String 	| Only the constant `nsxt` is accepted. 
| `parameters` 						| Map 		| One or more name-value pairs for NCP settings. 
| `x_forwarded_for` 				| String 	| Use the same source IP for calling clients. Accepts `"insert"` and `"replace"`.
| `nsx_lb`							| Boolean 	| Use NSX-T layer 4 virtual server for each Kubernetes service of type LoadBalancer. Default is `true`.
| `nsx_ingress_controller` 			| Boolean 	| Use NSX-T layer 7 virtual server as the ingress controller for the Kubernetes cluster. Default is `true`.
| `ingress_ip`						| String 	| IP address to use for the ingress controller. 
| `log_settings` 					| Map 		| Parameters for configuring NCP logging. 
| `log_level` 						| String 	| Accepted values: "INFO", "WARNING", "DEBUG", "ERROR", and "CRITICAL". 
| `log_dropped_traffic` 			| Boolean 	| Log dropped firewall traffic. Default is `false`. 
| `ingress_persistence_settings`	| String 	| Parameters for customizing Layer 7 persistence. 
| `persistence_type` 				| String 	| Specify the ingress persistence type: `none` or `cookie`. 
| `persistence_timeout` 			| Integer 	| Persistence timeout interval in seconds. 
| `max_l4_lb_service` 				| Integer 	| Limit the maximum number of layer 4 virtual servers per cluster. Minimum is `1`.
| `l4_persistence_type`				| String 	| Connection stickiness based on `source_ip`. 
| `l4_lb_algorithm`					| String 	| Layer 4 load balancer behavior: `round_robin` (default), `least_connection`, `ip_hash`, `weighted_round_robin`. 
| `top_firewall_section_marker`		| String 	| UUID of the top `section-id` for the distributed firewall (DFW) section as defined in NSX-T. 
| `bottom_firewall_section_marker`	| String 	| UUID of the bottom `section-id` for the distributed firewall (DFW) section as defined in NSX-T. 

## <a id="creation"></a> Network Profile Creation

After the network profile is defined in a JSON file, an <%= vars.product_short %> administrator can create the network profile using the PKS CLI. The Kubernetes administrator can use the network profile when creating a cluster.

After you define your network profile configuration as described in [Defining Network Profiles](network-profiles-define.html),
run the following command:

```
pks create-network-profile PATH-TO-YOUR-NETWORK-PROFILE-CONFIGURATION
``` 
Where `PATH-TO-YOUR-NETWORK-PROFILE-CONFIGURATION` is the path to the JSON file
you created when defining the network profile.

For example:

<pre class="terminal">
$ pks create-network-profile np-routable-pods.json

Network profile small-routable-pod successfully created
</pre>

Only cluster administrators, `pks.clusters.admin`, can create network profiles.
If a cluster manager, `pks.clusters.manage`, attempts to create a network profile,
the following error occurs:

```
You do not have enough privileges to perform this action. Please contact the PKS administrator.
```

For more information, see the [Create and Use Network Profiles](network-profiles.html#cli-commands) section of _Using Network Profiles (NSX-T Only)_.
