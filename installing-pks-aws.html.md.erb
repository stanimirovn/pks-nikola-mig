---
title: Installing Enterprise PKS on AWS
owner: PKS
iaas: AWS
---

<strong><%= modified_date %></strong>

This topic describes how to install and configure <%= vars.product_full %> on Amazon Web Services (AWS).

##<a id='prerequisites'></a>Prerequisites

Before performing the procedures in this topic, you must have deployed and configured Ops Manager.
For more information, see [AWS Prerequisites and Resource Requirements](aws-requirements.html).

This topic assumes that you used Terraform to prepare the AWS environment for this <%= vars.product_full %> deployment. You retrieve specific values required by this deployment by running `terraform output`.

For more information, see [Deploying Ops Manager on AWS
Using Terraform](https://docs.pivotal.io/pcf/om/aws/prepare-env-terraform.html).

<%= partial 'prerequisites' %>

##<a id='install'></a> Step 1: Install <%= vars.product_short %>

<%= partial 'install-pks' %>

##<a id='configure'></a> Step 2: Configure <%= vars.product_short %>

Click the orange **<%= vars.product_tile %>** tile to start the configuration process.

![PKS tile on the Ops Manager installation dashboard](images/pks-tile-orange.png)

  <p class="note warning"><strong>WARNING</strong>: When you configure the <%= vars.product_tile %> tile,
  do not use spaces in any field entries. This includes spaces between characters as well as
  leading and trailing spaces. If you use a space in any field entry, the deployment of <%= vars.product_short %> fails.</p>

###<a id='azs-networks'></a> Assign AZs and Networks

<%= partial 'azs-networks' %>

###<a id='pks-api'></a> PKS API

<%= partial 'pks-api' %>

###<a id='plans'></a> Plans

<%= partial 'plans' %>

###<a id='cloud-provider'></a> Kubernetes Cloud Provider

To configure your Kubernetes cloud provider settings, follow the procedures below:

1. Click **Kubernetes Cloud Provider**.

1. Under **Choose your IaaS**, select **AWS**.

    <img src="images/cloud-aws.png" alt="AWS pane configuration" width="325">

1. Enter your **AWS Master Instance Profile IAM**. This is the instance profile name associated with the master node. To retrieve the instance profile name, run `terraform output` and locate the value for the field `pks_master_iam_instance_profile_name`.

1. Enter your **AWS Worker Instance Profile IAM**. This is the instance profile name associated with the worker node. To retrieve the instance profile name, run `terraform output` and locate the value for the field `pks_worker_iam_instance_profile_name`.

1. Click **Save**.

###<a id='syslog'></a> (Optional) Logging

<%= partial 'logging' %>

###<a id='networking'></a> Networking

To configure networking, do the following:

1. Click **Networking**.
1. Under **Container Networking Interface**, select **Flannel**.
    <img src="images/networking-flannel.png" alt="Networking pane configuration" width="425">
1. (Optional) Enter values for **Kubernetes Pod Network CIDR Range** and **Kubernetes Service Network CIDR Range**.
    * Ensure that the CIDR ranges do not overlap and have sufficient space for your deployed services.
    * Ensure that the CIDR range for the **Kubernetes Pod Network CIDR Range** is large enough to accommodate the expected maximum number of pods.
1. (Optional) If you do not use a NAT instance, select **Allow outbound internet access from Kubernetes cluster vms (IaaS-dependent)**. Enabling this functionality assigns external IP addresses to VMs in clusters.

1. Click **Save**.

###<a id='uaa'></a> UAA

<%= partial 'uaa' %>

###<a id='monitoring'></a> (Optional) Monitoring
<%= partial 'monitoring' %>

###<a id='telemetry'></a> CEIP and Telemetry
<%= partial 'usage-data' %>

###<a id='errands'></a> Errands
<%= partial 'errands' %>

###<a id='resource-config'></a> Resource Config

To modify the resource usage of <%= vars.product_short %> and specify your PKS API load balancer, follow the steps below:

1. Select **Resource Config**.
    ![Resource pane configuration](images/aws/resource-config-aws.png)
1. In the **Load Balancers** column, enter all values of `pks_api_target_groups` from the Terraform output, 
prefixed with `alb:`.

    ```
    alb:ENV-pks-tg-9021,alb:ENV-pks-tg-8443
    ```
    Where `ENV` matches the `env_name` that you defined when you set up Terraform. 
    For example: <code>alb:pcf-pks-tg-9021,alb:pcf-pks-tg-8443</code> 

    <%= partial 'lb-resource-config' %>

1. (Optional) Edit other resources used by the **PKS API** job.
The **PKS API** job requires a VM with the following minimum
resources:
  <table>
    <tr>
      <th>CPU</th>
      <th>Memory</th>
      <th>Disk</th>
    </tr>
    <tr>
      <td>2</td>
      <td>8&nbsp;GB</td>
      <td>29&nbsp;GB</td>
    </tr>
  </table>
  <p class="note"><strong>Note</strong>: The automatic <strong>VM Type</strong> value matches the minimum recommended size for the <strong>Pivotal Container Service</strong> job. If you experience timeouts or slowness when interacting with the PKS API, select a <strong>VM Type</strong> with greater CPU and memory resources.</p>
1. (Optional) If you do not use a NAT instance, select **Internet Connected** to allow component instances direct access to the internet.  

##<a id='apply-changes'></a> Step 3: Apply Changes

<%= partial 'apply-changes' %>

##<a id='retrieve-pks-api'></a> Step 4: Retrieve the PKS API Endpoint

<%= partial 'share-endpoint' %>

## <a id='clis'></a> Step 5: Install the PKS and Kubernetes CLIs

<%= partial 'install-cli' %>

## <a id='auth'></a> Step 6: Configure Authentication for <%= vars.product_short %>
 
Follow the procedures in [Setting Up <%= vars.product_short %> Admin Users on AWS](aws-configure-pks-users.html).

##<a id='next-steps'></a> Next Steps

After installing <%= vars.product_short %> on AWS, you might want to do one or more of the following:

* Create a load balancer for your <%= vars.product_short %> clusters. For more information, see [Creating and Configuring an AWS Load Balancer for <%= vars.product_short %> Clusters](aws-cluster-load-balancer.html).
* Create your first <%= vars.product_short %> cluster. For more information, see [Creating Clusters](create-cluster.html).
